/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import static java.awt.Frame.NORMAL;
import java.io.File;
import java.io.FilenameFilter;
import java.util.Arrays;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JorgeCristhian
 */
public class SelectFiles extends javax.swing.JDialog {

    private String[] paDocuments;
    private String psPath;
    /**
     * Creates new form SelectFiles
     */
    public SelectFiles(java.awt.Frame parent, boolean modal, File toFolderSelection) {
        super(parent, modal);
        initComponents();
        this.mxLoadFiles(toFolderSelection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFilesSelected = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListFiles = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblBegin = new javax.swing.JLabel();
        spnBegin = new javax.swing.JSpinner();
        spnEnd = new javax.swing.JSpinner();
        lblEnd = new javax.swing.JLabel();
        cmbSelectFiles = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Documents");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblFilesSelected.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selected Files"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFilesSelected);

        tblListFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "List Files"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListFiles);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName(""); // NOI18N

        lblBegin.setText("Begin");

        spnBegin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spnBeginFocusLost(evt);
            }
        });

        lblEnd.setText("End");

        cmbSelectFiles.setText("Select");
        cmbSelectFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbSelectFilesMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBegin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnBegin)
                    .addComponent(spnEnd))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbSelectFiles)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBegin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSelectFiles)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Select Range:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbReturn.setText("Return");
        cmbReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbReturnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmbReturn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbReturn)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spnBeginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spnBeginFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_spnBeginFocusLost

    private void cmbSelectFilesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSelectFilesMousePressed
        // TODO add your handling code here:
        this.mxSelectFiles();
    }//GEN-LAST:event_cmbSelectFilesMousePressed

    private void cmbReturnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbReturnMousePressed
        // TODO add your handling code here:        
        if(((DefaultTableModel)this.tblFilesSelected.getModel()).getRowCount() > 0)
        {
            this.dispose();
            return;
        }
        Object [] opciones = {"Acept","Cancel"};

        if(JOptionPane.showOptionDialog(this, "No documents selected, Would you like continue?", "Confirmation", JOptionPane.YES_NO_OPTION, 
                                        JOptionPane.QUESTION_MESSAGE, null, opciones, "Acept") == JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }//GEN-LAST:event_cmbReturnMousePressed
   
    private void mxSelectFiles()
    {
        int lnBegin = Integer.parseInt(((JSpinner.DefaultEditor)this.spnBegin.getEditor()).getTextField().getText());
        int lnEnd = Integer.parseInt(((JSpinner.DefaultEditor)this.spnEnd.getEditor()).getTextField().getText());
        DefaultTableModel loModelSelected = (DefaultTableModel)this.tblFilesSelected.getModel();
        int lnNumFiles = loModelSelected.getRowCount(), lnValue = 0;
        
        //Clean current selected files
        for (int i = 0; lnNumFiles > i; i++) 
            loModelSelected.removeRow(0);
        
        lnNumFiles = this.paDocuments.length;
        for(int i = 0; i < lnNumFiles; i++)
        {
            lnValue = Integer.parseInt(this.paDocuments[i].substring(0, this.paDocuments[i].length() - 4));
            if(lnValue >= lnBegin && lnValue <= lnEnd)
                loModelSelected.addRow(new Object[]{this.paDocuments[i]});            
        }
    }
    
    private void mxLoadFiles(File toFolderSelection)
    {
        File[] laListFiles;
        this.psPath = toFolderSelection.getPath() + "/";
        FilenameFilter loNameFilter = new FilenameFilter() 
        {   
            @Override
            public boolean accept(File dir, String name)
            {
                if(name.lastIndexOf('.') > 0)
                {
                    int lastIndex = name.lastIndexOf('.');
                    String str = name.substring(lastIndex);
                    return str.equals(".txt");
                }
               return false;
            }
        };

        laListFiles = toFolderSelection.listFiles(loNameFilter);
        this.paDocuments = new String[laListFiles.length];
        int lnCont = 0;
        
        for (File loFile: laListFiles)
        {
            this.paDocuments[lnCont++] = loFile.getName();            
        }
        
        this.paDocuments = this.mxSortDocuments(this.paDocuments);
        
        for(String lsFile : this.paDocuments)
        {
            ((DefaultTableModel)this.tblListFiles.getModel()).addRow(new Object[]{lsFile});
        }
    }
    
    public String[] mxGetDocumentsSelected()
    {
        DefaultTableModel loModelSelected = (DefaultTableModel)this.tblFilesSelected.getModel();
        int lnNumFiles = loModelSelected.getRowCount();
        String laDocuments[] = new String[lnNumFiles];
        
        for(int i = 0; i < lnNumFiles; i++)
        {
            laDocuments[i] = this.psPath + loModelSelected.getValueAt(i, NORMAL).toString();
        }
        
        return laDocuments;
    }
    
    private String[] mxSortDocuments(String taDocuments[])
    {
        Arrays.sort(taDocuments, new NameComparator());
        return taDocuments;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmbReturn;
    private javax.swing.JButton cmbSelectFiles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBegin;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JSpinner spnBegin;
    private javax.swing.JSpinner spnEnd;
    private javax.swing.JTable tblFilesSelected;
    private javax.swing.JTable tblListFiles;
    // End of variables declaration//GEN-END:variables
}

class NameComparator implements Comparator<String> 
{
    public int compare(String tsStrOne, String tsStrTwo) 
    {
        int lnStrOne = Integer.parseInt(tsStrOne.substring(0, tsStrOne.length() - 4));
        int lnStrTwo = Integer.parseInt(tsStrTwo.substring(0, tsStrTwo.length() - 4));
        
	return Integer.compare(lnStrOne, lnStrTwo);
    }
}